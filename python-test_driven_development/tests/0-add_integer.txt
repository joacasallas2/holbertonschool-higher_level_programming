=============================
 How to Use 0-add_integer.py
=============================

This module has one function called ``add_integer(a, b=98)``.

Usage
=======

``add_integer(...)`` returns the sum of its two arguments.
The result is equivalent to using the ``+`` operator.
a and b must be integers or floats

::
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3

::

    >>> add_integer(100, -2)
    98

::

    >>> add_integer(2)
    100

a and b must be first casted to integers if they are float:

::

    >>> add_integer(100.3, -2)
    98

::

    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

::

    >>> add_integer("School", 4)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::

    >>> add_integer(1.7976931348623157e+308 * 10, 1.7976931348623157e+308 * 10)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
